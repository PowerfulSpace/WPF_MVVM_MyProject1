<Window x:Class="WpfApp4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:cmd="clr-namespace:WpfApp4.Infrastructure.Commands"
        xmlns:decanat="clr-namespace:WpfApp4.Models.Decanat"
        xmlns:vm="clr-namespace:WpfApp4.ViewModels"
        xmlns:local="clr-namespace:WpfApp4"    
        mc:Ignorable="d"
        Title="{Binding Title}"
        Height="450" Width="800">
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="Q" Command="{Binding CloseApplicationCommand}" />
    </Window.InputBindings>
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <cmd:CloseApplicationCommand x:Key="CloseApplicationCommand"/>

        <!--<Style TargetType="Button">
            <Setter Property="Background" Value="HotPink"/>
        </Style>-->
        
    </Window.Resources>
   

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Файл">
                <MenuItem Header="Выход" Command="{StaticResource CloseApplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="Помощь">
                <MenuItem Header="О Программе"></MenuItem>
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem MaxWidth="350" MinWidth="150">
                <TextBlock Text="{Binding Status}"/>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="120" Height="14" Value="30"></ProgressBar>
            </StatusBarItem>
        </StatusBar>

        <TabControl>

            <TabItem Header="Студенты">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Column="0" Header="группы">
                        <DockPanel>
                            <UniformGrid DockPanel.Dock="Bottom" Rows="1" Margin="0,3">
                                <Button Command="{Binding CreateGroupCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:ImageAwesome Height="12" Icon="Solid_Check" Foreground="LightGreen" Margin="0,0,3,0">
                                            <fa:ImageAwesome.Effect>
                                                <DropShadowEffect ShadowDepth="1"/>
                                            </fa:ImageAwesome.Effect>
                                        </fa:ImageAwesome>
                                        <TextBlock Text="Добавить"/>
                                    </StackPanel>
                                </Button>
                                <Button Content="Удалить" Margin="3,0" Padding="3,5" Command="{Binding DeleteGroupCommand}" CommandParameter="{Binding SelectedGroup}"/>
                            </UniformGrid>
                            <ListBox ItemsSource="{Binding Groups}" SelectedIndex="0" SelectedItem="{Binding SelectedGroup}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="decanat:Group">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" Name="TextView" />
                                            <TextBlock Text="{Binding Students.Count, StringFormat=[студентов: {0}]}" Margin="3,0,0,0"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Students.Count}" Value="0">
                                                <Setter TargetName="TextView" Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Header="{Binding SelectedGroup.Name, FallbackValue='Студенты', TargetNullValue='Группа не выбрана' }">
                        <DataGrid ItemsSource="{Binding SelectedGroup.Students}" AutoGenerateColumns="False" CanUserAddRows="False" GridLinesVisibility="Vertical" VerticalGridLinesBrush="DarkGray" AlternatingRowBackground="LightGray">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}" Width="Auto" IsReadOnly="True" />
                                <DataGridTextColumn Header="Имя" Binding="{Binding Name}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Отчество" Binding="{Binding Patronymic}" IsReadOnly="True"/>
                                <DataGridTemplateColumn Header="Дата рождения" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="decanat:Student">
                                            <TextBlock Text="{Binding Birthday, StringFormat='dd.MM.yyyy'}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="decanat:Student">
                                            <DatePicker SelectedDate="{Binding Birthday}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Рэйтинг" Binding="{Binding Rating}" IsReadOnly="True"/>
                                <!--<DataGridTextColumn Header="Группа" Binding="{Binding DataContext.SelectedGroup.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>-->
                                <DataGridTextColumn Header="Заметки" Binding="{Binding Description}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>

                

            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome Icon="Regular_File" Height="13" Margin="0,0,15,0" Foreground="Red"/>
                        <TextBlock Text="Фигуры"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="63*"/>
                        <RowDefinition Height="325*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="157*"/>
                        <ColumnDefinition Width="637*"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Grid.Row="0" Grid.Column="0" Fill="Blue" Margin="5,7" Stroke="Red" StrokeThickness="3" RadiusX="5" RadiusY="7" ></Rectangle>
                    <Ellipse Grid.Row="0" Grid.Column="1" Fill="Red" Stroke="Blue" StrokeThickness="3" >
                        <Ellipse.InputBindings>
                            <MouseBinding Command="{Binding CloseApplicationCommand}" MouseAction="LeftDoubleClick"/>
                        </Ellipse.InputBindings>
                    </Ellipse>

                    <GridSplitter Grid.Column="0" Grid.RowSpan="2" Grid.Row="0" HorizontalAlignment="Right" Width="4"/>
                </Grid>
            </TabItem>

            <TabItem Header="Разнородные данные" Height="20" VerticalAlignment="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="29"/>
                        <ColumnDefinition Width="221"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Элементы" Grid.ColumnSpan="2">
                        <GroupBox.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="../../Resources/DataTemplates/CompositeListitemsDataTemplates.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </GroupBox.Resources>
                        <ListBox ItemsSource="{Binding CompositeCollection}" SelectedItem="{Binding SelectedCompositevalue}"/>
                    </GroupBox>
                    <GroupBox Grid.Column="2">
                        <GroupBox.Header>
                            <TextBlock Text="Выбранный элемент"/>
                        </GroupBox.Header>
                        <GroupBox.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="../../Resources/DataTemplates/CompositeItemsControlDataTemplates.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </GroupBox.Resources>
                        <ContentControl Content="{Binding SelectedCompositevalue}" />
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Кнопка">
                <Button Margin="20,20" VerticalAlignment="Top" HorizontalAlignment="Left" Content="12" Width="110" RenderTransformOrigin="0.5,0.5" Opacity="1">
                    <Button.Background>
                        <SolidColorBrush Color="LightPink" x:Name="ButtonBrush"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRotate" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="0:0:1" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="ButtonBrush" Storyboard.TargetProperty="Color" To="Red" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="ButtonBrush" Storyboard.TargetProperty="Color" To="LightPink" Duration="0:0:3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                    <Button.RenderTransform>
                        <RotateTransform x:Name="ButtonRotate"  Angle="0"/>
                    </Button.RenderTransform>
                </Button>
            </TabItem>

            <TabItem Header="Empty"></TabItem>

        </TabControl>
    </DockPanel>
</Window>
